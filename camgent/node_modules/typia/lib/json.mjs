import { NoTransformConfigurationError } from './transformers/NoTransformConfigurationError.mjs';

/** @internal */
function schemas() {
    NoTransformConfigurationError("json.schemas");
}
/** @internal */
function schema() {
    NoTransformConfigurationError("json.schema");
}
/** @internal */
function assertParse() {
    NoTransformConfigurationError("json.assertParse");
}
/** @internal */
function isParse() {
    NoTransformConfigurationError("json.isParse");
}
/** @internal */
function validateParse() {
    NoTransformConfigurationError("json.validateParse");
}
/** @internal */
function stringify() {
    NoTransformConfigurationError("json.stringify");
}
/** @internal */
function assertStringify() {
    NoTransformConfigurationError("json.assertStringify");
}
/** @internal */
function isStringify() {
    NoTransformConfigurationError("json.isStringify");
}
/** @internal */
function validateStringify() {
    NoTransformConfigurationError("json.validateStringify");
}
/** @internal */
function createIsParse() {
    NoTransformConfigurationError("json.createIsParse");
}
/** @internal */
function createAssertParse() {
    NoTransformConfigurationError("json.createAssertParse");
}
/** @internal */
function createValidateParse() {
    NoTransformConfigurationError("json.createValidateParse");
}
/** @internal */
function createStringify() {
    NoTransformConfigurationError("json.createStringify");
}
/** @internal */
function createAssertStringify() {
    NoTransformConfigurationError("json.createAssertStringify");
}
/** @internal */
function createIsStringify() {
    NoTransformConfigurationError("json.createIsStringify");
}
/** @internal */
function createValidateStringify() {
    NoTransformConfigurationError("json.createValidateStringify");
}

export { assertParse, assertStringify, createAssertParse, createAssertStringify, createIsParse, createIsStringify, createStringify, createValidateParse, createValidateStringify, isParse, isStringify, schema, schemas, stringify, validateParse, validateStringify };
//# sourceMappingURL=json.mjs.map
