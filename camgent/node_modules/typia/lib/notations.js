"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.camel = camel;
exports.assertCamel = assertCamel;
exports.isCamel = isCamel;
exports.validateCamel = validateCamel;
exports.pascal = pascal;
exports.assertPascal = assertPascal;
exports.isPascal = isPascal;
exports.validatePascal = validatePascal;
exports.snake = snake;
exports.assertSnake = assertSnake;
exports.isSnake = isSnake;
exports.validateSnake = validateSnake;
exports.createCamel = createCamel;
exports.createAssertCamel = createAssertCamel;
exports.createIsCamel = createIsCamel;
exports.createValidateCamel = createValidateCamel;
exports.createPascal = createPascal;
exports.createAssertPascal = createAssertPascal;
exports.createIsPascal = createIsPascal;
exports.createValidatePascal = createValidatePascal;
exports.createSnake = createSnake;
exports.createAssertSnake = createAssertSnake;
exports.createIsSnake = createIsSnake;
exports.createValidateSnake = createValidateSnake;
const NoTransformConfigurationError_1 = require("./transformers/NoTransformConfigurationError");
/** @internal */
function camel() {
    return (0, NoTransformConfigurationError_1.NoTransformConfigurationError)("notations.camel");
}
/** @internal */
function assertCamel() {
    return (0, NoTransformConfigurationError_1.NoTransformConfigurationError)("notations.assertCamel");
}
/** @internal */
function isCamel() {
    return (0, NoTransformConfigurationError_1.NoTransformConfigurationError)("notations.isCamel");
}
/** @internal */
function validateCamel() {
    return (0, NoTransformConfigurationError_1.NoTransformConfigurationError)("notations.validateCamel");
}
/** @internal */
function pascal() {
    return (0, NoTransformConfigurationError_1.NoTransformConfigurationError)("notations.pascal");
}
/** @internal */
function assertPascal() {
    return (0, NoTransformConfigurationError_1.NoTransformConfigurationError)("notations.assertPascal");
}
/** @internal */
function isPascal() {
    return (0, NoTransformConfigurationError_1.NoTransformConfigurationError)("notations.isPascal");
}
/** @internal */
function validatePascal() {
    return (0, NoTransformConfigurationError_1.NoTransformConfigurationError)("notations.validatePascal");
}
/** @internal */
function snake() {
    return (0, NoTransformConfigurationError_1.NoTransformConfigurationError)("notations.snake");
}
/** @internal */
function assertSnake() {
    return (0, NoTransformConfigurationError_1.NoTransformConfigurationError)("notations.assertSnake");
}
/** @internal */
function isSnake() {
    return (0, NoTransformConfigurationError_1.NoTransformConfigurationError)("notations.isSnake");
}
/** @internal */
function validateSnake() {
    return (0, NoTransformConfigurationError_1.NoTransformConfigurationError)("notations.validateSnake");
}
/** @internal */
function createCamel() {
    (0, NoTransformConfigurationError_1.NoTransformConfigurationError)("notations.createCamel");
}
/** @internal */
function createAssertCamel() {
    (0, NoTransformConfigurationError_1.NoTransformConfigurationError)("notations.createAssertCamel");
}
/** @internal */
function createIsCamel() {
    (0, NoTransformConfigurationError_1.NoTransformConfigurationError)("notations.createIsCamel");
}
/** @internal */
function createValidateCamel() {
    (0, NoTransformConfigurationError_1.NoTransformConfigurationError)("notations.createValidateCamel");
}
/** @internal */
function createPascal() {
    (0, NoTransformConfigurationError_1.NoTransformConfigurationError)("notations.createPascal");
}
/** @internal */
function createAssertPascal() {
    (0, NoTransformConfigurationError_1.NoTransformConfigurationError)("notations.createAssertPascal");
}
/** @internal */
function createIsPascal() {
    (0, NoTransformConfigurationError_1.NoTransformConfigurationError)("notations.createIsPascal");
}
/** @internal */
function createValidatePascal() {
    (0, NoTransformConfigurationError_1.NoTransformConfigurationError)("notations.createValidatePascal");
}
/** @internal */
function createSnake() {
    (0, NoTransformConfigurationError_1.NoTransformConfigurationError)("notations.createSnake");
}
/** @internal */
function createAssertSnake() {
    (0, NoTransformConfigurationError_1.NoTransformConfigurationError)("notations.createAssertSnake");
}
/** @internal */
function createIsSnake() {
    (0, NoTransformConfigurationError_1.NoTransformConfigurationError)("notations.createIsSnake");
}
/** @internal */
function createValidateSnake() {
    (0, NoTransformConfigurationError_1.NoTransformConfigurationError)("notations.createValidateSnake");
}
//# sourceMappingURL=notations.js.map