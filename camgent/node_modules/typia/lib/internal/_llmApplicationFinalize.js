"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports._llmApplicationFinalize = void 0;
const LlmSchemaComposer_1 = require("@samchon/openapi/lib/composers/LlmSchemaComposer");
const _llmApplicationFinalize = (app, options) => {
    var _a, _b, _c, _d;
    app.options = Object.assign(Object.assign({}, LlmSchemaComposer_1.LlmSchemaComposer.defaultConfig(app.model)), { separate: (_a = options === null || options === void 0 ? void 0 : options.separate) !== null && _a !== void 0 ? _a : null, validate: (_b = options === null || options === void 0 ? void 0 : options.validate) !== null && _b !== void 0 ? _b : null });
    if (app.options.separate !== null)
        for (const func of app.functions)
            func.separated = LlmSchemaComposer_1.LlmSchemaComposer.separateParameters(app.model)({
                parameters: func.parameters,
                predicate: app.options
                    .separate,
                equals: (_c = options === null || options === void 0 ? void 0 : options.equals) !== null && _c !== void 0 ? _c : false,
            });
    if (app.options.validate !== null)
        for (const func of app.functions)
            if (typeof ((_d = app.options.validate) === null || _d === void 0 ? void 0 : _d[func.name]) === "function")
                func.validate = app.options.validate[func.name];
};
exports._llmApplicationFinalize = _llmApplicationFinalize;
//# sourceMappingURL=_llmApplicationFinalize.js.map